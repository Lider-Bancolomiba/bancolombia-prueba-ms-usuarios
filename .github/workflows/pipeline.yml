name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'us-east-1'

    # Instalación de dependencias para pruebas
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        pip install pytest moto fastapi boto3 pytest-cov

    # Ejecución de pruebas unitarias con cobertura
    - name: Run unit tests
      run: |
        source venv/bin/activate
        pytest --cov=. --cov-report=xml --maxfail=3 --disable-warnings

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v4
      #continue-on-error: true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=bancolombia-prueba-ms-usuarios
          -Dsonar.organization=Bancolombia
          -Dsonar.tests=.
          -Dsonar.test.inclusions=**/test_*.py
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.sources=.
          -Dsonar.host.url=https://sonarcloud.io

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_USERS_REPOSITORY_URI }}:latest .
  
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Tag Docker image
      run: |
        docker tag ${{ secrets.ECR_USERS_REPOSITORY_URI }}:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_USERS_REPOSITORY_URI }}:latest

    - name: Push Docker image to ECR 
      run: |
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_USERS_REPOSITORY_URI }}:latest

    - name: Update ECS service
      run: |
          aws ecs update-service \
            --cluster  main-ecs-cluster\
            --service usuarios-service \
            --force-new-deployment

    - name: Verify ECS Service Status
      run: |
        aws ecs wait services-stable \
          --cluster  main-ecs-cluster\
          --service usuarios-service  